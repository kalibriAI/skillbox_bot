from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from aiogram.utils.keyboard import InlineKeyboardBuilder

from model.types import HotelInfo


def choose_cities_keyboard(cities: list[dict]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤.

    :param cities: –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤.
    :type cities: list[dict]
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤.
    :rtype: InlineKeyboardMarkup
    """

    builder = InlineKeyboardBuilder()
    for city in cities:
        builder.add(InlineKeyboardButton(text=city['city_name'], callback_data=f'dest{city["destination_id"]}'))
    builder.adjust(1)
    return builder.as_markup()


def choose_search_type() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞.

    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞.
    :rtype: InlineKeyboardMarkup
    """

    kb = [[InlineKeyboardButton(text='–ü–æ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º', callback_data='search_by_cord')],
          [InlineKeyboardButton(text='–ü–æ –ì–æ—Ä–æ–¥–∞–º', callback_data='search_by_city')],
          [InlineKeyboardButton(text='–ü–æ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏', callback_data='search_by_location')]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def choose_sort_type() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    :rtype: InlineKeyboardMarkup
    """

    kb = [[InlineKeyboardButton(text='–ü–æ –¶–µ–Ω–µ(–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)', callback_data='sort_to_high')],
          [InlineKeyboardButton(text='–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π', callback_data='sort_lowest')],
          [InlineKeyboardButton(text='–°–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π', callback_data='sort_highest')]]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def make_hotel_page(data: dict) -> tuple[list, str]:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–µ–ª–µ.

    :param data: –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–µ–ª–µ.
    :type data: dict
    :return: –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–µ–ª—è.
    :rtype: tuple[list, str]
    :raises IndexError: –ï—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –æ—Ç–µ–ª—è –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞.
    """

    index = data['scroll_index']
    print(index)
    try:
        current_hotel: HotelInfo = data['hotels'][index]
    except TypeError:
        raise IndexError
    else:
        photos = current_hotel.photos
        media_group = []
        total_quantity = len(data['hotels'])
        needtoknow = '\n\n'.join(current_hotel.needtoknow)
        caption = f"üè®–û—Ç–µ–ª—å –Ω–æ–º–µ—Ä - <b>{index + 1} / {total_quantity}</b>\n\n     ‚úèÔ∏è–ù–∞–∑–≤–∞–Ω–∏–µ:  <b>{current_hotel.name}</b>\n     üöó–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: <b>{current_hotel.destination.value} {current_hotel.destination.unit}</b>\n     ‚öôÔ∏è–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:\n          <b>–®–∏—Ä–æ—Ç–∞: {current_hotel.cord.latitude}\n          –î–æ–ª–≥–æ—Ç–∞: {current_hotel.cord.longitude}</b>\n     üíµ–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>[{current_hotel.price.amount}] {current_hotel.price.amount * data['total_days']}{current_hotel.price.symbol} - {current_hotel.price.code}</b>\n     ‚≠êÔ∏è–û—Ü–µ–Ω–∫–∏:\n          <b>üèÜ–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {current_hotel.reviews.score}\n          üë®‚Äçüë®‚Äçüë¶–ö–æ–ª-–≤–æ –æ—Ü–µ–Ω–æ–∫: {current_hotel.reviews.total}</b>\n     üìç–ê–¥—Ä–µ—Å: <b>{current_hotel.addres}</b>\n\n     <b>‚ùóÔ∏è–ù—É–∂–Ω–æ –∑–Ω–∞—Ç—å: </b>\n{needtoknow}"
        for obj in photos[:10]:
            media_group.append(InputMediaPhoto(media=obj.url))
        return media_group, caption
